type HttpRequest = record {
  method : text;
  url : text;
  headers : vec record { text; text };
  body : vec nat8
};

type HttpResponse = record {
  status_code : nat16;
  headers : vec record { text; text };
  body : vec nat8
};

type WasmStatus = record {
  name : text;
  version : nat16;
  memo : opt text
};

type ManageIIPrincipalArg = variant {
  Set : principal;
  Get
};

type ManageIIPrincipalResult = variant {
  Ok : principal;
  Err : text
};

type ManageAlternativeOriginsArg = variant {
  Add : text;
  Remove : text
};

type ManageAlternativeOriginsResult = variant {
  Ok;
  Err : text
};

type ManageTopUpRuleArg = variant {
  Get;
  Add : TopUpRule;
  Clear
};

type ManageTopUpRuleResult = variant {
  Ok : opt TopUpRule;
  Err : text
};

type TopUpRule = record {
  interval : TopUpInterval;
  cycles_threshold : CyclesAmount;
  cycles_amount : CyclesAmount
};

type TopUpInterval = variant {
  Hourly;
  Daily;
  Weekly;
  Monthly
};

type CyclesAmount = variant {
  _0_25T;
  _0_5T;
  _1T;
  _2T;
  _5T;
  _10T;
  _50T;
  _100T
};

service : {
  "http_request" : (HttpRequest) -> (HttpResponse) query;
  "wasm_status" : () -> (WasmStatus) query;
  "manage_ii_principal" : (ManageIIPrincipalArg) -> (ManageIIPrincipalResult);
  "manage_alternative_origins" : (ManageAlternativeOriginsArg) -> (ManageAlternativeOriginsResult);
  "manage_top_up_rule" : (ManageTopUpRuleArg) -> (ManageTopUpRuleResult)
}
